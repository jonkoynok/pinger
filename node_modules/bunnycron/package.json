{
  "name": "bunnycron",
  "version": "0.3.11",
  "description": "Scheduling task on your webapp",
  "keywords": [
    "schedule",
    "cron",
    "cronjob",
    "worker",
    "queue"
  ],
  "main": "index.js",
  "scripts": {
    "test": "mocha test"
  },
  "author": {
    "name": "chenka",
    "email": "kao@jitta.com"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jitta/bunnycron.git"
  },
  "license": "MIT",
  "dependencies": {
    "async": "^0.9.0",
    "coffee-script": "^1.8.0",
    "cron": "^1.0.4",
    "express": "^4.10.6",
    "hiredis": "^0.4.0",
    "jade": "^1.3.1",
    "lodash": "~2.4.1",
    "moment": "^2.7.0",
    "redis": "^0.12.1",
    "reds": "^0.2.4"
  },
  "devDependencies": {
    "mocha": "^1.18.2",
    "chai": "^1.9.1",
    "grunt": "^0.4.5",
    "grunt-contrib-coffee": "^0.10.1",
    "grunt-contrib-watch": "^0.6.1",
    "should": "~3.3.1",
    "sinon": "~1.10.0",
    "supertest": "^0.13.0"
  },
  "readme": "# Bunnycron\nBunnycron is a job scheduling module trigged by your node.js process. Bunnycron will schedule a job based on a cron syntax textfile in your project directory, so you can keep your job scheduling definition in your git repository. With a lock machanism provided by [Redis](http://redis.io), Bunnycron will prevent the same job running multiple times within a cluster. It provides a clean user interface to monitor your jobs and their statuses.\n\n[![Build Status](https://travis-ci.org/jitta/bunnycron.svg)](https://travis-ci.org/jitta/bunnycron)\n\n\n\n\n![rabbit-resize](https://cloud.githubusercontent.com/assets/837612/8177518/c49d1a5e-142f-11e5-9d30-f7da1ee9e4f8.png)\n\n## Installation\n\nInstall via npm:\n\n```sh\nnpm install bunnycron\n```\n\n## User Interface\n### Schedule Overview\nBunnycron provides a clean user-interface for viewing your scheduled jobs.\n\n![Homepage](https://cloud.githubusercontent.com/assets/837612/3614327/7ff3db9e-0dbf-11e4-8c7e-b045899b7c29.jpg)\n\n### Schedule Log\nThe logging system allows you to see how your job processed\n\n![Schedule log](https://cloud.githubusercontent.com/assets/837612/3609667/9ec2fe9c-0d7e-11e4-870c-69d45de7a8fd.png)\n\n\n\n## Cronfile\nFirst create a `Cronfile` file in your root directory of your project.\n\n![cronfile](https://cloud.githubusercontent.com/assets/837612/3597594/48a60a5e-0cd4-11e4-9cef-e353240433ef.png)\n\n\nAn example of `Cronfile` with the same syntax of your familiar Crontab\n\n    00 30 12 * * * node backup_databse.js\n\n\t*/10 * * * * * ./checkuptime.sh\n\n\t00 30 11 * * 1-5 curl -o aapl.html http://www.jitta.com/stock/aapl\n\n\n## Available Cron Patterns\n\n    Asterisk. E.g. *\n    Ranges. E.g. 1-3,5\n    Steps. E.g. */2\n\n## Cronfile Examples\n    */10 * * * * 1-2  echo \"Run every 10 seconds on Monday and Tuesday\"\n    00 */2 * * * *  echo \"Run every 2 minutes everyday\"\n    00 30 09-10 * * * echo \"Run at 09:30 and 10:30 everyday\"\n    00 30 08 10 06 * echo \"Run at 08:30 on 10th June\"\n\n    - 00 for Sunday or 24.00\n\n\n[Read more cron patterns here](http://www.thegeekstuff.com/2009/06/15-practical-crontab-examples/).\n\n\n## Running a Cronjob\n\n```js\nvar bunny = require('bunnycron')();\nbunny.startCron();\n```\n\n## Redis Connection Settings\n\n```js\nvar options = {\n  redis: {\n    port: 1234,\n    host: '10.12.33.44',\n    auth: 'fj2ifjeo2j'\n}\nbunny = require('bunnycron')(options);\nbunny.startCron()\n```\n\nwhen required bunnycron module you can pass `options` in an object with the following possible properties.\n\n* `cronFile` : the directory path to `Cronfile` ex. `./path/to/dir`\n* `redis` : by default, Bunnycron will connect to Redis using the client default settings (port defaults to `6379` and host defaults to `127.0.0.1`, prefix defaults to `bunny`)\n* `prefix` : defaults to `bunny`. Custom redis predix\n* `debug` : send log data to stdout.\n\n\n\n## User-Interface\nTo view your scheduled jobs UI. You can use `bunny.app` within your existing express.js application.\n\n```js\nvar express = require('express');\nvar app = express();\nvar bunny = require('bunnycron')()\nbunny.startCron();\napp.use(bunny.app);\n// app.use('/bunny/', bunny.app) or custom base url\napp.listen(3000);\n\n```\n\n\n\n\n\n\n\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2014 Jitta &lt;dev@jitta.com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/jitta/bunnycron/issues"
  },
  "homepage": "https://github.com/jitta/bunnycron",
  "_id": "bunnycron@0.3.11",
  "_from": "bunnycron@^0.3.11"
}
